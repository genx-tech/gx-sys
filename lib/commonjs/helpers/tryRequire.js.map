{"version":3,"sources":["tryRequire.js"],"names":["tryRequireBy","packageName","mainModule","throwWhenNotFound","require2","text","ensureEndsWith","path","sep","require","error","code","pkgPaths","split","npmPkgName","startsWith","length","pos1","message","indexOf","realModuleName","substr","pos2","Error","undefined","tryRequire","basePath","process","cwd","main"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,SAASA,YAAT,CAAsBC,WAAtB,EAAmCC,UAAnC,EAA+CC,iBAA/C,EAAkE;AAC9D,MAAI;AACA,QAAI,OAAOD,UAAP,KAAsB,QAA1B,EAAoC;AAChC,YAAME,QAAQ,GAAG,2BACbC,WAAKC,cAAL,CAAoBJ,UAApB,EAAgCK,cAAKC,GAArC,CADa,CAAjB;AAGA,aAAOJ,QAAQ,CAACH,WAAD,CAAf;AACH;;AAED,WAAOC,UAAU,CAACO,OAAX,CAAmBR,WAAnB,CAAP;AACH,GATD,CASE,OAAOS,KAAP,EAAc;AACZ,QAAIA,KAAK,CAACC,IAAN,KAAe,kBAAnB,EAAuC;AACnC,UAAIR,iBAAJ,EAAuB;AACnB,YAAIS,QAAQ,GAAGX,WAAW,CAACY,KAAZ,CAAkB,GAAlB,CAAf;AACA,YAAIC,UAAU,GAAGF,QAAQ,CAAC,CAAD,CAAzB;;AAEA,YAAIE,UAAU,CAACC,UAAX,CAAsB,GAAtB,CAAJ,EAAgC;AAC5B;AACA,gBAAML,KAAN;AACH;;AAED,YAAII,UAAU,CAACC,UAAX,CAAsB,GAAtB,KAA8BH,QAAQ,CAACI,MAAT,GAAkB,CAApD,EAAuD;AACnDF,UAAAA,UAAU,IAAI,MAAMF,QAAQ,CAAC,CAAD,CAA5B;AACH;;AAED,YAAIK,IAAI,GAAGP,KAAK,CAACQ,OAAN,CAAcC,OAAd,CAAsB,GAAtB,CAAX;AACA,YAAIC,cAAc,GAAGV,KAAK,CAACQ,OAAN,CAAcG,MAAd,CAAqBJ,IAAI,GAAG,CAA5B,CAArB;AACA,YAAIK,IAAI,GAAGF,cAAc,CAACD,OAAf,CAAuB,GAAvB,CAAX;AACAC,QAAAA,cAAc,GAAGA,cAAc,CAACC,MAAf,CAAsB,CAAtB,EAAyBC,IAAzB,CAAjB;;AAEA,YAAIF,cAAc,KAAKnB,WAAvB,EAAoC;AAChC,gBAAM,IAAIsB,KAAJ,CACD,WAAUtB,WAAY,qCAAoCa,UAAW,8BADpE,CAAN;AAGH;;AAED,cAAMJ,KAAN;AACH;;AAED,aAAOc,SAAP;AACH;;AAED,UAAMd,KAAN;AACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASe,UAAT,CAAoBxB,WAApB,EAAiCyB,QAAjC,EAA2C;AACvC;AACAA,EAAAA,QAAQ,IAAI,IAAZ,KAAqBA,QAAQ,GAAGC,OAAO,CAACC,GAAR,EAAhC;AAEA,SACI5B,YAAY,CAACC,WAAD,EAAcQ,OAAO,CAACoB,IAAtB,EAA4BH,QAAQ,IAAI,IAAxC,CAAZ,IACA1B,YAAY,CAACC,WAAD,EAAcyB,QAAd,EAAwB,IAAxB,CAFhB;AAIH;;eAEcD,U","sourcesContent":["import { createRequire } from 'module';\nimport { text } from '@genx/july';\nimport path from 'path';\n\nfunction tryRequireBy(packageName, mainModule, throwWhenNotFound) {\n    try {\n        if (typeof mainModule === 'string') {\n            const require2 = createRequire(\n                text.ensureEndsWith(mainModule, path.sep)\n            );\n            return require2(packageName);\n        }\n\n        return mainModule.require(packageName);\n    } catch (error) {\n        if (error.code === 'MODULE_NOT_FOUND') {\n            if (throwWhenNotFound) {\n                let pkgPaths = packageName.split('/');\n                let npmPkgName = pkgPaths[0];\n\n                if (npmPkgName.startsWith('.')) {\n                    //path\n                    throw error;\n                }\n\n                if (npmPkgName.startsWith('@') && pkgPaths.length > 1) {\n                    npmPkgName += '/' + pkgPaths[1];\n                }\n\n                let pos1 = error.message.indexOf(\"'\");\n                let realModuleName = error.message.substr(pos1 + 1);\n                let pos2 = realModuleName.indexOf(\"'\");\n                realModuleName = realModuleName.substr(0, pos2);\n\n                if (realModuleName === packageName) {\n                    throw new Error(\n                        `Module \"${packageName}\" not found. Try run \"npm install ${npmPkgName}\" to install the dependency.`\n                    );\n                }\n\n                throw error;\n            }\n\n            return undefined;\n        }\n\n        throw error;\n    }\n}\n\n/**\n * Try require a package module and show install tips if not found.\n * @alias helpers.tryRequire\n * @param {string} packageName\n * @returns {object}\n */\nfunction tryRequire(packageName, basePath) {    \n    // eslint-disable-next-line no-undef\n    basePath != null || (basePath = process.cwd()); \n\n    return (\n        tryRequireBy(packageName, require.main, basePath == null) ||\n        tryRequireBy(packageName, basePath, true)\n    );\n}\n\nexport default tryRequire;\n"]}